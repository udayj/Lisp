(defun entry-tree (tree)
  (car tree))
(defun left-branch-tree (tree)
  (cadr tree))
(defun right-branch-tree (tree)
  (caddr tree))
(defun make-tree (entry left right)
  (list entry left right))
(defun lookup (key database)
  (cond ((nil? database) nil)
	((= key (entry-tree database)) (entry-tree database))
	((< key (entry-tree database)) (lookup key (left-branch-tree database)))
	(t (lookup key (right-branch-tree database)))))
(defun nil? (x)
  (equalp nil x))