(defun bin-search (obj vec &key (key (lambda(x) x)) (test (lambda(x y) (eq x y))) (start 0) end)
  (let ((len (length vec)))
    (and (not (zerop len))
	 (finder key test obj vec start (if (null end)
				   (- len 1)
				   end)))))
; the test function should be used for all comparisons....currently it is being used just for equality comparisons
(defun finder (key test obj vec start end)
  (let ((range (- end start)))
    (if (zerop range)
	(if (funcall test obj (funcall key vec start))
	    obj
	    nil)
	(let ((mid (+ start (round (/ range 2)))))
	  (let ((obj2 (funcall key vec mid)))
	    (if (< obj obj2)
		(finder key test obj vec start (- mid 1))
		(if (> obj obj2)
		    (finder key test obj vec (+ mid 1) end)
		    obj)))))))