(defun make-mobile (left right)
  (list left right))
(defun make-branch (length structure)
  (list length structure))
(defun left-branch (mobile)
  (car mobile))
(defun right-branch (mobile)
  (car (cdr mobile)))
(defun branch-length (branch)
  (car branch))
(defun branch-structure (branch)
  (car (cdr branch)))
(defun total-weight (mobile)
 (+ (total-weight-branch (left-branch mobile)) 
	   (total-weight-branch (right-branch mobile))))
(defun total-weight-branch (branch)
  (if (not (mobile? (branch-structure branch))) (branch-structure branch)
      (total-weight (branch-structure branch))))
(defun mobile? (x)
 (consp x))
(defun balanced-mobile? (mobile)
  (and (= (torque (left-branch mobile)) (torque (right-branch mobile)))
       (balanced-branch? (left-branch mobile))
       (balanced-branch? (right-branch mobile))))
(defun torque (branch)
  (* (branch-length branch) (total-weight-branch branch)))
(defun balanced-branch? (branch)
  (cond ((not (mobile? (branch-structure branch))) t)
	(t (balanced-mobile? (branch-structure branch)))))
  
      